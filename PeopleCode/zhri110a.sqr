!*****************************************************************************
!*  Program Name:  ZHRI110A
!*****************************************************************************
!*  Author:              Jim Gonzales, Enterprise Rent-A-Car
!*  Date:                9/2/1999
!*  Owner:               PS Data Conversion/Interface Team
!*  Project ID:          ZHR_MOD_INTERFACE
!*****************************************************************************
!*  Program Summary:  This program will move rows from the Trigger table to the History Table.  It will also
!*                    delete rows from the history file after they have resided there for one year.
!*
!*****************************************************************************
!*  Tables Used:
!*
!*  Table                  Description                            Access
!*  PS_ZHRT_INTTRIGGER     Interface Trigger                      Select, Delete
!*  PS_ZHRT_HISTRIGGER     Interface Trigger History              Insert, Delete                          
!*  PS_ZHRT_ALTTRIGGER     Alternate Interface Trigger            Select, Delete
!*  PS_ZHRT_HISALTTRIG     Alternate Interface Trigger History    Insert, Delete 
!*
!*  Input/output Files:
!*
!*  File Name         Input/output        Description
!*  ---------         ------------        -----------
!*
!*****************************************************************************
!*
!*  Modifications:
!*
!*    Date          Developer Name/Project ID               Description Of Changes
!*    9/2/1999      Jim Gonzales/ZHR_MOD_INTERFACE          Newly Created
!*
!*    4/19/2000     Heather Sphar/ZHR_MOD_INTPURGE          Add code so this program can be
!*                                                          run in PS via Process Scheduler/panels
!* 11/07/2000   Sreedhar Kondepudi/ZHR_MOD_REHOST_INTERFACE Modified as part of UNIX Rehost
!* 03/22/2001   Christopher W Bates/ZHR_MOD_REHOST          Corrected date processing to work on UNIX
!  03/22/2006  Robert Doelger/ZHR_MOD_ZHRI100A_110A         Changed logic so that all records except 'P' records
!                                                           would go to archive after 30 days.
!*****************************************************************************
!*  Author............: J.Massian
!*  Date..............: 07/29/08
!*  Owner.............: Perot 9.0 Upgrade Team
!*  Project Id........: 
!*  Purpose of change.: -Added timing logic.
!			-Added displays to track section movement.
!
!**********************************************************************
!  05/10/2017  Surya Sobha    TEMPMAST Phase 2
!                             Modified the program include the Alternate trigger table to the purge
!                             Added the below procedures -
!                             Process-Main-Alt
!                             Update-History-Row-Alt
!                             Delete-Trigger-Record-Alt
!                             Delete-History-Row-Alt
!                             Delete-Orphan-Rows 
!                             Delete-Blank-NEW-Emplid
!**********************************************************************
#include 'setenv.sqc' !Set environment

begin-program
!
  Let $DTTM_STAMP1 = DATETOSTR(Datenow(),'MM/DD/YYYY HH:MI:SS')		! 07/29/2008- Begin
  Display ''
  Show 'Process Start Date & Time Stamp: ' $DTTM_STAMP1			! 07/29/2008- End
!
  Do GET-CURRENT-DATETIME  !Gets the current date and time using curdttim.sqc
  Do stdapi-init           !Interface with process request, from STDAPI.SQC

  Display '- Entering Process-Main...'					! 07/29/2008
  Do Process-Main
  Display '- Entering Delete-History-Row...'				! 07/29/2008  
  Do Delete-History-Row
  
  Do Delete-Orphan-Rows     !Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0            
  Display '- Entering Delete-Orphan-Rows...'        !Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0
  Do Delete-Blank-NEW-Emplid !Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0
  Display '- Entering Delete-Blank-NEW-Emplid ...'  !Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0
  
  Display '- Entering Process-Main-Alt...'		      !Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0 			
  Do Process-Main-Alt                               !Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0 
  Display '- Entering Delete-History-Row-Alt...'		!Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0 	 
  Do Delete-History-Row-Alt                         !Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0 
  
!
  Do Reset                       					! RESET.SQC, Reset printer & print 'End of Report'
  Do Stdapi-Term                      					! STDAPI.SQC, Process Scheduler Interface, executes EOJ.SQC
!
  Let $DTTM_STAMP2 = DATETOSTR(Datenow(),'MM/DD/YYYY HH:MI:SS')		! 07/29/2008- Begin
  Display ''
  Show 'Process Start Date & Time Stamp: ' $DTTM_STAMP2			! 07/29/2008- End
!  
end-program


!----------------------------------------------------------------------
! ERAC
! Procedure:  Process-Main
! Desc:  This is the process controling procedure.
!----------------------------------------------------------------------

Begin-Procedure Process-Main
!											! 07/29/2008- Begin
  #ifdef debug
  Display 'Entered Process-Main.'
  #endif
!											! 07/29/2008- End

!Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0 
Let #WrkSequence = 0
Let $WrkOprid = ''
Let $WrkEffdt = ''
Let #WrkFSeq = 0
Let $WrkProc = ''
Let $WrkTask = ''
!Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0 

Begin-Select

RZ.SEQ_NBR
    Move &RZ.SEQ_NBR TO #WrkSequence
RZ.OPRID
    Move &RZ.OPRID TO $WrkOprid
RZ.EMPLID
    Move &RZ.EMPLID to $WrkEmplid
RZ.EFFDT
    Let $WrkEffdt = &RZ.EFFDT
RZ.EFFSEQ
    Move &RZ.EFFSEQ to #WrkFSeq
RZ.PROC_NAME
    Move &RZ.PROC_NAME to $WrkProc
RZ.TASK_FLAG
    Move &RZ.TASK_FLAG to $WrkTask

    Do Check-old-enough($AsOfToday,$WrkEffdt,#num_days)
    If #num_days > 30
        Do Update-History-Row
    End-if    !#num_days > 30

FROM PS_ZHRT_INTTRIGGER RZ
!where RZ.TASK_FLAG <> 'P'    						!ZHR_MOD_ZHRI100A_110A !Commented 05/10/2017 - Tempmast Phase 2.0 
where RZ.TASK_FLAG NOT IN  ('P','W')      !Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0 
order by seq_nbr
End-Select


Do Delete-Trigger-Record

!											! 07/29/2008- Begin
  #ifdef debug
  Display 'Exiting Process-Main.'
  #endif
!											! 07/29/2008- End
End-Procedure Process-Main


!----------------------------------------------------------------------
! Erac
! Procedure:  Check-Old-Enough
! Desc:  This will get the difference in number of days between the
!        effective date and the current date
!----------------------------------------------------------------------

Begin-procedure Check-Old-Enough($AsOfToday,$WrkEffdt,:#num_days)
!
declare-variable
 date $Date1
end-declare

declare-variable
 date $Date2
end-declare
!											! 07/29/2008- Begin
  #ifdef debug
  Display 'Entered Check-Old-Enough.'
  #endif
!											! 07/29/2008- End

Let $Date1 = $AsOfToday
Let $Date2 = $WrkEffDt

Let #num_days = datediff($Date1,$Date2,'day')
!											! 07/29/2008- Begin
  #ifdef debug
  Display 'Exiting Check-Old-Enough.'
  #endif
!											! 07/29/2008- End
End-procedure Check-Old-Enough


!----------------------------------------------------------------------
! Erac
! Procedure:  Update-History-Row
! Desc:  This will update the history table with the data from the trigger
!        table and the current (or archive) date and remove it from the trigger table
!----------------------------------------------------------------------

Begin-procedure Update-History-Row
!											! 07/29/2008- Begin
  #ifdef debug
  Display 'Entering Update-History-Row.'
  #endif
!											! 07/29/2008- End
Begin-SQL
Insert into PS_ZHRT_HISTRIGGER
  (SEQ_NBR,
  OPRID,
  EMPLID,
  EFFDT,
  EFFSEQ,
  PROC_NAME,
  TASK_FLAG,
  Archive_DT)
values (
  #WrkSequence,
  $WrkOprid,
  $WrkEmplid,
  $WrkEffdt,
  #WrkFSeq,
  $WrkProc,
  $WrkTask,
  $AsOfToday)

End-SQL

!											! 07/29/2008- Begin
  #ifdef debug
  Display 'Exiting Update-History-Row.'
  #endif
!											! 07/29/2008- End
End-procedure Update-History-Row


!----------------------------------------------------------------------
! Erac
! Procedure:  Delete-Trigger-Record
! Desc:  Deletes all trigger records where the sequence number exists in the history file
!----------------------------------------------------------------------

Begin-procedure Delete-Trigger-Record
!											! 07/29/2008- Begin
  #ifdef debug
  Display 'Entering Delete-Trigger-Record.'
  #endif
!											! 07/29/2008- End
Begin-SQL

DELETE from PS_ZHRT_INTTRIGGER
  WHERE SEQ_NBR IN (SELECT SEQ_NBR FROM PS_ZHRT_HISTRIGGER)

End-SQL
!											! 07/29/2008- Begin
  #ifdef debug
  Display 'Exiting Delete-Trigger-Record.'
  #endif
!											! 07/29/2008- End
End-procedure Delete-Trigger-Record

!----------------------------------------------------------------------
! Erac
! Procedure:  Delete-History-Row
! Desc:  Deletes all History Records that have been on file at least one year.
!------------------------------------------------------------------------

Begin-Procedure Delete-History-Row
!											! 07/29/2008- Begin
  #ifdef debug
  Display 'Entering Delete-History-Row.'
  #endif
!											! 07/29/2008- End
Let #Year = substr($AsOfToday,8,4)
Let #Year = #Year - 1
Let $Year = #Year
Let $Year = Substr($Year, 1, 4)
Let $PurgeDt = Substr($AsOfToday,1,7) || $Year

Begin-SQL

DELETE from PS_ZHRT_HISTRIGGER
    WHERE Archive_DT < $PurgeDt

End-SQL
!											! 07/29/2008- Begin
  #ifdef debug
  Display 'Exiting Delete-History-Row.'
  #endif
!											! 07/29/2008- End
End-Procedure Delete-History-Row

!Surya Sobha Added 05/10/2017 - Tempmast Phase 2.0 

!----------------------------------------------------------------------
! Erac
! Procedure:  Delete-Orphan-Rows
! Desc:  Deletes all orphan rows less than 90 days
!        created on PS_ZHRT_INTTRIGGER when POIs are added
!----------------------------------------------------------------------

Begin-procedure Delete-Orphan-Rows
!											
  #ifdef debug
  Display 'Entering Delete-Orphan-Rows.'
  #endif
!										
Begin-SQL

DELETE FROM PS_ZHRT_INTTRIGGER TRG
WHERE  NOT EXISTS (SELECT DISTINCT 'X' FROM PS_JOB J WHERE J.EMPLID = TRG.EMPLID 
                            and J.EFFDT = (SELECT MAX(J1.EFFDT) FROM PS_JOB J1
                            WHERE J1.EMPLID = J.EMPLID
                            AND J1.EMPL_RCD= J.EMPL_RCD
                            AND J1.EFFDT <= SYSDATE))
AND TRG.TASK_FLAG = 'P'
AND TRG.EMPLID <> 'NEW' 
AND TRG.EMPLID <> ' '
AND TRG.EFFDT  <= SYSDATE -90  

End-SQL
!											
  #ifdef debug
  Display 'Exiting Delete-Orphan-Rows.'
  #endif
!										
End-procedure Delete-Orphan-Rows

!----------------------------------------------------------------------
! Erac
! Procedure:  Delete-Blank-NEW-Emplid
! Desc:  Deletes all rows with BLANK or NEW Emplid which is older 
!        than 180 days
!----------------------------------------------------------------------

Begin-procedure Delete-Blank-NEW-Emplid
!											
  #ifdef debug
  Display 'Entering Delete-Blank-NEW-Emplid.'
  #endif
!										
Begin-SQL

DELETE FROM PS_ZHRT_INTTRIGGER TR
WHERE TR.TASK_FLAG = 'P'
AND (TR.EMPLID = 'NEW' 
OR TR.EMPLID = ' ')
AND TR.EFFDT <= SYSDATE - 180 

End-SQL
!											
  #ifdef debug
  Display 'Exiting Delete-Blank-NEW-Emplid.'
  #endif
!										
End-procedure Delete-Blank-NEW-Emplid

!----------------------------------------------------------------------
! ERAC
! Procedure:  Process-Main-Alt
! Desc:  This is the process controling procedure.
!----------------------------------------------------------------------

Begin-Procedure Process-Main-Alt
!											
  #ifdef debug
  Display 'Entered Process-Main-Alt.'
  #endif
!	

Let #WrkSequence = 0
Let $WrkOprid = ''
Let $WrkEffdt = ''
Let #WrkFSeq = 0
Let $WrkProc = ''
Let $WrkTask = ''
Let #SeqNo = 0
										
Begin-Select

AZ.SEQ_NBR
    Move &AZ.SEQ_NBR TO #WrkSequence
AZ.OPRID
    Move &AZ.OPRID TO $WrkOprid
AZ.EMPLID
    Move &AZ.EMPLID to $WrkEmplid
AZ.EFFDT
    Let $WrkEffdt = &AZ.EFFDT
AZ.EFFSEQ
    Move &AZ.EFFSEQ to #WrkFSeq
AZ.PROC_NAME
    Move &AZ.PROC_NAME to $WrkProc
AZ.TASK_FLAG
    Move &AZ.TASK_FLAG to $WrkTask
AZ.SEQUENCE
    Move &AZ.SEQUENCE TO #SeqNo

    Do Check-old-enough($AsOfToday,$WrkEffdt,#num_days)
    If #num_days > 30
        Do Update-History-Row-Alt
    End-if    !#num_days > 30

FROM PS_ZHRT_ALTTRIGGER AZ
where AZ.TASK_FLAG <> 'P'  					
order by AZ.SEQ_NBR
End-Select


Do Delete-Trigger-Record-Alt

!											
  #ifdef debug
  Display 'Exiting Process-Main-Alt.'
  #endif
!											
End-Procedure Process-Main-Alt

!----------------------------------------------------------------------
! Erac
! Procedure:  Update-History-Row-Alt
! Desc:  This will update the history table with the data from the trigger
!        table and the current (or archive) date and remove it from the trigger table
!----------------------------------------------------------------------

Begin-procedure Update-History-Row-Alt
!											
  #ifdef debug
  Display 'Entering Update-History-Row_Alt.'
  #endif
!											
Begin-SQL
Insert into PS_ZHRT_HISALTTRIG 
  (SEQ_NBR,
  OPRID,
  EMPLID,
  EFFDT,
  EFFSEQ,
  PROC_NAME,
  TASK_FLAG,
  SEQUENCE,
  Archive_DT)
values (
  #WrkSequence,
  $WrkOprid,
  $WrkEmplid,
  $WrkEffdt,
  #WrkFSeq,
  $WrkProc,
  $WrkTask,
  #SeqNo,
  $AsOfToday)

End-SQL

!											
  #ifdef debug
  Display 'Exiting Update-History-Row-Alt.'
  #endif
!										
End-procedure Update-History-Row-Alt


!----------------------------------------------------------------------
! Erac
! Procedure:  Delete-Trigger-Record-Alt
! Desc:  Deletes all trigger records where the sequence number exists in the history file
!----------------------------------------------------------------------

Begin-procedure Delete-Trigger-Record-Alt
!											
  #ifdef debug
  Display 'Entering Delete-Trigger-Record.'
  #endif
!										
Begin-SQL

DELETE from PS_ZHRT_ALTTRIGGER 
  WHERE SEQ_NBR IN (SELECT SEQ_NBR FROM PS_ZHRT_HISALTTRIG)

End-SQL
!											
  #ifdef debug
  Display 'Exiting Delete-Trigger-Record-Alt.'
  #endif
!										
End-procedure Delete-Trigger-Record-Alt


!----------------------------------------------------------------------
! Erac
! Procedure:  Delete-History-Row-Alt
! Desc:  Deletes all History Records that have been on file at least one year.
!------------------------------------------------------------------------

Begin-Procedure Delete-History-Row-Alt
!											
  #ifdef debug
  Display 'Entering Delete-History-Row-Alt.'
  #endif
!											
Let #Year = substr($AsOfToday,8,4)
Let #Year = #Year - 1
Let $Year = #Year
Let $Year = Substr($Year, 1, 4)
Let $PurgeDt = Substr($AsOfToday,1,7) || $Year

Begin-SQL

DELETE from PS_ZHRT_HISALTTRIG 
    WHERE Archive_DT < $PurgeDt

End-SQL
!											
  #ifdef debug
  Display 'Exiting Delete-History-Row-Alt.'
  #endif
!											
End-Procedure Delete-History-Row-Alt

!Surya Sobha End 05/10/2017 - Tempmast Phase 2.0 

!***********************************************************************
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Performs arithmetic operations on dates
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'readxlat.sqc'  !Read Translate Table
#Include 'reset.sqc'     !End of Program
#INCLUDE 'stdapi.sqc'    !STANDARD PROGRAM INTERFACE

